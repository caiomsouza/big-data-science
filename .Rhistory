1+1
## Look for required packages, install them if not already installed
list.of.packages <- c('streamR','ROAuth')
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
## load the required packages
l <- lapply(list.of.packages, require, character.only=T,  quietly=TRUE)
## get parameters
args <- commandArgs(trailingOnly = TRUE)
#str(args)
## Create or load the OAUTH credential file
if(!file.exists('pdi_R_twitter_oauth.Rdata')) {
requestURL <- "https://api.twitter.com/oauth/request_token"
accessURL <- "https://api.twitter.com/oauth/access_token"
authURL <- "https://api.twitter.com/oauth/authorize"
consumerKey <- "xxxxxxxxxxxxxxxxxxxxxx"
consumerSecret <- "xxxxxxxxxxxxxxxxxxxxxxxxx"
my_oauth <- OAuthFactory$new(consumerKey = consumerKey, consumerSecret = consumerSecret,
requestURL = requestURL, accessURL = accessURL, authURL = authURL)
my_oauth$handshake(cainfo = system.file("CurlSSL", "cacert.pem", package = "RCurl"))
save(my_oauth, file = "pdi_R_twitter_oauth.Rdata")
} else {
load('pdi_R_twitter_oauth.Rdata')
}
## Look for required packages, install them if not already installed
## Look for required packages, install them if not already installed
## Look for required packages, install them if not already installed
## Look for required packages, install them if not already installed
## Look for required packages, install them if not already installed
## Look for required packages, install them if not already installed
## Look for required packages, install them if not already installed
list.of.packages <- c('streamR','ROAuth')
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
## load the required packages
l <- lapply(list.of.packages, require, character.only=T,  quietly=TRUE)
## get parameters
args <- commandArgs(trailingOnly = TRUE)
#str(args)
## Create or load the OAUTH credential file
if(!file.exists('pdi_R_twitter_oauth.Rdata')) {
requestURL <- "https://api.twitter.com/oauth/request_token"
accessURL <- "https://api.twitter.com/oauth/access_token"
authURL <- "https://api.twitter.com/oauth/authorize"
consumerKey <- "CpxWVyRYrmpKbcZ2VOOmCqMqh"
consumerSecret <- "95k4BJav8Wc4oKtJg2VXteQS88eOBYMbXVMu4zjQKs3Ow94n50"
my_oauth <- OAuthFactory$new(consumerKey = consumerKey, consumerSecret = consumerSecret,
requestURL = requestURL, accessURL = accessURL, authURL = authURL)
my_oauth$handshake(cainfo = system.file("CurlSSL", "cacert.pem", package = "RCurl"))
save(my_oauth, file = "pdi_R_twitter_oauth.Rdata")
} else {
load('pdi_R_twitter_oauth.Rdata')
}
gc()
rm(list = ls())
setwd("~/GitHub/caiomsouza/big-data-science")
library(RJDBC)
hivedrv <- JDBC("org.apache.hive.jdbc.HiveDriver",
c(list.files("drivers/cdh55/hadoop",pattern="jar$",full.names=T),
list.files("drivers/cdh55/hive",pattern="jar$",full.names=T)))
hivecon <- dbConnect(hivedrv, "jdbc:hive2://192.168.0.29:10000/default", "hive", "")
query = "select * from customers LIMIT 10"
hres <- dbGetQuery(hivecon, query)
head(hres)
class(hres)
